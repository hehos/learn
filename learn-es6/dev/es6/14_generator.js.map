{"version":3,"sources":["../../src/es6/14_generator.js"],"names":["gen","longRunningTask","wrapper","genObj","next","Gen","Symbol","iterator","value1","step1","value2","step2","value3","step3","value4","step4","value5","scheduler","initialValue","task","taskObj","value","done","p1","Promise","resolve","reject","Error","console","log","p2","then","result","catch","error","val"],"mappings":";;;;mDAMUA,G;oDAuBAC,e;;AA7BV;;;;AAIA;;AAEA,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,qDACW,MADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAASE,OAAT,GAAmB;AACf,QAAIC,SAASH,KAAb;AACA,WAAOG,OAAOC,IAAP,EAAP;AACH;;AAEDF;;AAGA,SAASG,GAAT,GAAe;AACX;AACID,cAAM,gBAAY,CAEjB;AAHL,OAIKE,OAAOC,QAJZ,EAIuB,YAAY;AAC3B,eAAO,IAAP;AACH,KANL;AAQH;;AAED,SAAUN,eAAV,CAA0BO,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAE2BC,MAAMD,MAAN,CAF3B;;AAAA;AAEYE,0BAFZ;AAAA;AAAA,2BAG2BC,MAAMD,MAAN,CAH3B;;AAAA;AAGYE,0BAHZ;AAAA;AAAA,2BAI2BC,MAAMD,MAAN,CAJ3B;;AAAA;AAIYE,0BAJZ;AAAA;AAAA,2BAK2BC,MAAMD,MAAN,CAL3B;;AAAA;AAKYE,0BALZ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYAC,UAAUhB,gBAAgBiB,YAAhB,CAAV;;AAEA,SAASD,SAAT,CAAmBE,IAAnB,EAAyB;AACrB,QAAIC,UAAUD,KAAKf,IAAL,CAAUe,KAAKE,KAAf,CAAd;AACA;AACA,QAAI,CAACD,QAAQE,IAAb,EAAmB;AACfH,aAAKE,KAAL,GAAaD,QAAQC,KAArB;AACAJ,kBAAUE,IAAV;AACH;AACJ;;AAGD,IAAII,KAAK,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAA,WAAO,IAAIC,KAAJ,CAAU,MAAV,CAAP;AACH,CAHQ,CAAT;AAIAC,QAAQC,GAAR,CAAY,OAAON,EAAnB;;AAEA,IAAIO,KAAK,IAAIN,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAD,YAAQF,EAAR;AACH,CAHQ,CAAT;AAIAK,QAAQC,GAAR,CAAY,OAAOC,EAAnB;AACAA,GACKC,IADL,CACU,UAAUC,MAAV,EAAkB;AACpBJ,YAAQC,GAAR,CAAYG,MAAZ;AACH,CAHL,EAIKC,KAJL,CAIW,UAAUC,KAAV,EAAiB;AACpBN,YAAQC,GAAR,CAAYK,KAAZ;AACH,CANL;;AAQA;AACA,IAAIX,KAAK,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,WAAqBD,QAAQ,EAAR,CAArB;AAAA,CAAZ,CAAT;;AAEAF,GAAGQ,IAAH,CAAQ;AAAA,WAAOH,QAAQC,GAAR,CAAY,MAAMM,GAAlB,CAAP;AAAA,CAAR;AACAZ,GAAGQ,IAAH,CAAQ;AAAA,WAAOH,QAAQC,GAAR,CAAY,MAAMM,GAAlB,CAAP;AAAA,CAAR","file":"14_generator.js","sourcesContent":["/**\r\n * Created by hehui on 2016/11/3.\r\n */\r\n\r\n// ！！！！ 这个例子不能运行  ！！！！！！\r\n\r\nfunction* gen() {\r\n    return 'DONE';\r\n}\r\n\r\nfunction wrapper() {\r\n    var genObj = gen();\r\n    return genObj.next();\r\n}\r\n\r\nwrapper();\r\n\r\n\r\nfunction Gen() {\r\n    return {\r\n        next: function () {\r\n\r\n        },\r\n        [Symbol.iterator]: function () {\r\n            return this;\r\n        }\r\n    }\r\n}\r\n\r\nfunction* longRunningTask(value1) {\r\n    try {\r\n        var value2 = yield step1(value1);\r\n        var value3 = yield step2(value2);\r\n        var value4 = yield step3(value3);\r\n        var value5 = yield step4(value4);\r\n        // Do something with value4\r\n    } catch (e) {\r\n        // Handle any error from step1 through step4\r\n    }\r\n}\r\n\r\nscheduler(longRunningTask(initialValue));\r\n\r\nfunction scheduler(task) {\r\n    var taskObj = task.next(task.value);\r\n    // 如果Generator函数未结束，就继续调用\r\n    if (!taskObj.done) {\r\n        task.value = taskObj.value\r\n        scheduler(task);\r\n    }\r\n}\r\n\r\n\r\nvar p1 = new Promise(function (resolve, reject) {\r\n    // setTimeout(() => reject(new Error('fail')), 3000)\r\n    reject(new Error('fail'))\r\n})\r\nconsole.log('p1' + p1);\r\n\r\nvar p2 = new Promise(function (resolve, reject) {\r\n    // setTimeout(() => resolve(p1), 1000)\r\n    resolve(p1)\r\n})\r\nconsole.log('p2' + p2);\r\np2\r\n    .then(function (result) {\r\n        console.log(result);\r\n    })\r\n    .catch(function (error) {\r\n        console.log(error);\r\n    })\r\n\r\n// 多个通知\r\nvar p1 = new Promise((resolve, reject) => resolve(33));\r\n\r\np1.then(val => console.log('a' + val));\r\np1.then(val => console.log('b' + val));"]}